/** 
 * @file config.h.in
 * @brief This file defines compiler and OS-specific macros
 * 
 * This file is included in all Engine files first through common.h.
 * The compiler-specific macros are used throughout Engine, so defining them
 * first is important.
 */
#ifndef CONFIG_H_INCLUDED
#define CONFIG_H_INCLUDED

#cmakedefine RESOURCE_DIR "@RESOURCE_DIR@"
#cmakedefine DISABLE_ATTRIBUTES
#cmakedefine MSVC
#cmakedefine USE_ASAN

#cmakedefine GLEW_STATIC
#cmakedefine GLEW_BUILD

#ifdef MSVC
    #define _CRT_SECURE_NO_WARNINGS
    #define _USE_MATH_DEFINES
#endif

/* Dynamic library attributes */
#ifdef _WIN32
    #ifdef BUILDING_ENGINE_DLL
        #define ATTR_EXTERNAL __declspec(dllexport)
    #elif defined(INCLUDING_ENGINE_DLL)
        #define ATTR_EXTERNAL __declspec(dllimport)
    #else
        #define ATTR_EXTERNAL extern
    #endif
    #define ATTR_INTERNAL
#else
    #define ATTR_EXTERNAL extern
    #define ATTR_INTERNAL __attribute__((__visibility__("hidden"))) extern
#endif

/* Optimising attributes */
#ifdef DISABLE_ATTRIBUTES
    #define ATTR_UNUSED
    #define ATTR_PURE  
    #define ATTR_CONST 
    #define ATTR_MALLOC
    #define ATTR_RETURNS_NONNULL
    #define ATTR_NONNULL(...)
#elif defined(MSVC) /* MSVC has some attributes we can use */
    #define ATTR_UNUSED __pragma(warning(suppress:4100 4101))
    #define ATTR_PURE   __declspec(noalias)
    #define ATTR_CONST  __declspec(noalias)
    #define ATTR_MALLOC __declspec(restrict)
    #define ATTR_RETURNS_NONNULL
    #define ATTR_NONNULL(...)
#else /* GCC-based compilers use this syntax (MinGW too) */
    #define ATTR_UNUSED __attribute__((__unused__))
    #define ATTR_PURE   __attribute__((__pure__))
    #define ATTR_CONST  __attribute__((__const__))
    #define ATTR_MALLOC __attribute__((__malloc__))
    #define ATTR_RETURNS_NONNULL __attribute__((__returns_nonnull__))
    #define ATTR_NONNULL(...) __attribute__((nonnull(__VA_ARGS__)))
#endif

#endif /* CONFIG_H_INCLUDED */
